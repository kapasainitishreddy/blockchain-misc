ERC-721 â€“ The Golden Standard
In January 2018, William Entriken, Dieter Shirley, Jacob Evans, and Nastassia Sachs presented the
 ERC-721 (Ethereum Request for Comments 721) standard (aka the golden standard), which is
  considered the evergreen Non-fungible Token standard that specifies an API for non-fungible 
  tokens within smart contracts.The ERC-721 introduces a standard for NFT, in other words, 
  this type of token is unique and can have different value than another token from the same smart
   contract, maybe due to its age, rarity or even something else like its visual. Yes! All NFTs
    have a uint256 variable called tokenId, so for any ERC-721 contract, the pair contract address,
     uint256 tokenId must be globally unique. That said, a dApp can have a "converter" that uses 
     the tokenId as input and outputs an image of something cool, like zombies, weapons, skills or amazing kitties!



Definition of ERC-721 Smart Contract
If a smart contract implements the following methods, it can be deemed as an ERC-721 
(NFT) contract.

function balanceOf(address _owner) external view returns (uint256);
function ownerOf(uint256 _tokenId) external view returns (address);
function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes data) external payable;
function safeTransferFrom(address _from, address _to, uint256 _tokenId) external payable;
function transferFrom(address _from, address _to, uint256 _tokenId) external payable;
function approve(address _approved, uint256 _tokenId) external payable;
function setApprovalForAll(address _operator, bool _approved) external;
function getApproved(uint256 _tokenId) external view returns (address);
function isApprovedForAll(address _owner, address _operator) external view returns (bool);

help: https://metaschool.so/course/creating-nfts-using-different-token-standards/lesson/487e4296-6cdf-429c-ad4c-23246b611532
